name: Rust

on:
  push:
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Log versions'
        run: |
          rustc --version
          cargo --version
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-lint-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Run clippy
        run: cargo clippy --verbose
      - name: Check format
        run: cargo fmt -- --check --verbose

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Log versions'
        run: |
          rustc --version
          cargo --version
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-test-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --verbose --locked --all-targets

      - name: Run tests
        run: cargo test --verbose --all-targets

  release:
    name: Release ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
            triple: x86_64-unknown-linux-gnu

    steps:
    - uses: actions/checkout@v2
    - name: Log versions
      run: |
        rustc --version
        cargo --version

    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-release-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release
      run: cargo build --release --verbose --locked --all-targets --target ${{ matrix.config.triple }}

    - name: Pack release zip (linux, mac)
      if: |
        startsWith(matrix.config.os, 'ubuntu') ||
        startsWith(matrix.config.os, 'macOS')
      run: |
        cd target/release
        zip -r network-stalker-${{ matrix.config.triple }}.zip network-stalker
    - name: Pack release zip (windows)
      if: |
        startsWith(matrix.config.os, 'windows')
      run: |
        Compress-Archive -CompressionLevel Optimal -Force -Path target/release/network-stalker.exe -DestinationPath target/release/network-stalker-${{ matrix.config.triple }}.zip

    - name: inspect target dir
      run: |
        ls -al target
        ls -al target/*

    - name: Release Artifact (linux, mac)
      if: |
        startsWith(matrix.config.os, 'ubuntu') ||
        startsWith(matrix.config.os, 'macOS')
      uses: actions/upload-artifact@v2
      with:
        name: network-stalker-${{ matrix.config.triple }}.zip
        path: target/release/network-stalker
    - name: Release Artifact (windows)
      if: |
        startsWith(matrix.config.os, 'windows')
      uses: actions/upload-artifact@v2
      with:
        name: network-stalker-${{ matrix.config.triple }}.zip
        path: target/release/network-stalker.exe

    - name: GH Release
      if: |
        startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v0.1.5
      with:
        draft: true
        files: target/release/network-stalker-*.zip
